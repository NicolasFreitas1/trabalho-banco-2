generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum UserType {
    ADMIN
    USER

    @@map("tp_usario")
}

enum AccessType {
    VIEW
    EDIT

    @@map("tp_acesso")
}

enum PermissionType {
    READ
    WRITE

    @@map("tp_permissao")
}

model Document {
    id          Int      @id @default(autoincrement()) @map("id_documento")
    name        String   @map("nome") @db.VarChar(100)
    description String   @map("descricao") @db.Text
    path        String   @map("caminho_arquivo") @db.VarChar(255)
    createdAt   DateTime @default(now()) @map("dt_criacao")
    updatedAt   DateTime @updatedAt @map("dt_modificacao")
    ownerId     Int      @map("id_propretario")
    typeId      Int      @map("id_tipo_documento")

    type                DocumentType         @relation(fields: [typeId], references: [id])
    onwer               User                 @relation(fields: [ownerId], references: [id])
    documentTags        DocumentTag[]
    accessLogs          AccessLog[]
    Permission          Permission[]
    versions            Version[]
    documentCollections DocumentCollection[]

    @@map("documento")
}

model User {
    id        Int      @id @default(autoincrement()) @map("id_usuario")
    name      String   @map("nome") @db.VarChar(100)
    email     String   @unique @map("email") @db.VarChar(250)
    password  String   @map("senha") @db.VarChar(100)
    createdAt DateTime @default(now()) @map("dt_cadastro")
    type      UserType @default(USER) @map("tp_usuario")

    documents   Document[]
    accessLogs  AccessLog[]
    collections Collection[]
    permissions Permission[]

    @@map("usuario")
}

model Tag {
    id   Int    @id @default(autoincrement()) @map("id_tag")
    name String @map("nome") @db.VarChar(50)

    documentTags DocumentTag[]

    @@map("tag")
}

model DocumentTag {
    documentId Int @map("id_documento")
    tagId      Int @map("id_tag")

    document Document @relation(fields: [documentId], references: [id])
    tag      Tag      @relation(fields: [tagId], references: [id])

    @@id([documentId, tagId])
    @@map("documento_tag")
}

model AccessLog {
    id         Int        @id @default(autoincrement()) @map("id_log")
    userId     Int        @map("id_usuario")
    documentId Int        @map("id_documento")
    accessAt   DateTime   @map("dt_acesso")
    accessType AccessType @map("tp_acesso")

    document Document @relation(fields: [documentId], references: [id])
    user     User     @relation(fields: [userId], references: [id])

    @@map("log_acesso")
}

model Collection {
    id                 Int      @id @default(autoincrement()) @map("id_pasta")
    name               String   @map("nome") @db.VarChar(100)
    description        String   @map("descricao")
    parentCollectionId Int      @map("id_pasta_pai")
    onwerId            Int      @map("id_propretario")
    createdAt          DateTime @default(now()) @map("dt_criacao")

    onwer                User                 @relation(fields: [onwerId], references: [id])
    collection           Collection           @relation("pastaTopasta", fields: [parentCollectionId], references: [id])
    chieldrenCollections Collection[]         @relation("pastaTopasta")
    permissions          Permission[]
    documentCollections  DocumentCollection[]

    @@map("pasta")
}

model DocumentType {
    id          Int        @id @default(autoincrement()) @map("id_tipo_documento")
    name        String     @map("nome") @db.VarChar(50)
    description String     @map("descricao")
    documents   Document[]

    @@map("tipo_documento")
}

model Permission {
    id           Int            @id @default(autoincrement()) @map("id_permissao")
    userId       Int            @map("id_usuario")
    documentId   Int?           @map("id_documento")
    collectionId Int?           @map("id_pasta")
    type         PermissionType @map("tp_permissao")

    document  Document?   @relation(fields: [documentId], references: [id])
    collecion Collection? @relation(fields: [collectionId], references: [id])
    user      User        @relation(fields: [userId], references: [id])

    @@map("permissao")
}

model Version {
    id            Int      @id @default(autoincrement()) @map("id_versao")
    documentId    Int      @map("id_documento")
    versionNumber Int      @map("numero_versao")
    path          String   @db.VarChar(255)
    createdAt     DateTime @default(now()) @map("dt_criacao")
    description   String   @map("descricao_alteracao")

    document Document @relation(fields: [documentId], references: [id])

    @@map("versao")
}

model DocumentCollection {
    documentId   Int @map("id_documento")
    collectionId Int @map("id_pasta")

    document   Document   @relation(fields: [documentId], references: [id])
    collection Collection @relation(fields: [collectionId], references: [id])

    @@id([documentId, collectionId])
}
